apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: main-ingress
  annotations:
    # --- Standard Nginx Ingress Controller annotations ---
    kubernetes.io/ingress.class: "nginx"
    # nginx.ingress.kubernetes.io/rewrite-target: / # If paths need rewriting at Ingress level (usually not if Nginx handles paths)
    # nginx.ingress.kubernetes.io/ssl-redirect: "true" # Enforce HTTPS
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    # cert-manager.io/cluster-issuer: "letsencrypt-prod" # If using cert-manager for Let's Encrypt

    # --- Azure Application Gateway Ingress Controller (AGIC) annotations (if using AGIC) ---
    # kubernetes.io/ingress.class: azure/application-gateway
    # appgw.ingress.kubernetes.io/ssl-redirect: "true"
    # appgw.ingress.kubernetes.io/appgw-ssl-certificate: "your-appgw-ssl-cert-name" # If using cert on App Gateway

    # Add other relevant annotations for your Ingress controller
spec:
  # tls: # Uncomment and configure for HTTPS
  # - hosts:
  #   - <your-external-domain> # Replace with your actual domain
  #   secretName: tls-secret # Name of the Kubernetes secret containing TLS cert and key
  rules:
  - host: <your-external-domain> # Replace with your actual domain
    http:
      paths:
      - path: / # Catch-all path for requests to Nginx
        pathType: Prefix # Or ImplementationSpecific depending on Ingress controller
        backend:
          service:
            name: nginx-svc # Target the Nginx service
            port:
              number: 80 # Target port 80 on nginx-svc
  # Default backend if no rules match (optional)
  # defaultBackend:
  #   service:
  #     name: nginx-svc
  #     port:
  #       number: 80
